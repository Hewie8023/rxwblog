(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{529:function(t,a,v){"use strict";v.r(a);var _=v(6),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#基本特征"}},[t._v("基本特征")]),v("ul",[v("li",[v("a",{attrs:{href:"#并发"}},[t._v("并发")])]),v("li",[v("a",{attrs:{href:"#共享"}},[t._v("共享")])]),v("li",[v("a",{attrs:{href:"#虚拟"}},[t._v("虚拟")])]),v("li",[v("a",{attrs:{href:"#异步"}},[t._v("异步")])])])]),v("li",[v("a",{attrs:{href:"#基本功能"}},[t._v("基本功能")]),v("ul",[v("li",[v("a",{attrs:{href:"#进程管理"}},[t._v("进程管理")])]),v("li",[v("a",{attrs:{href:"#线程管理"}},[t._v("线程管理")])]),v("li",[v("a",{attrs:{href:"#内存管理"}},[t._v("内存管理")])]),v("li",[v("a",{attrs:{href:"#文件管理"}},[t._v("文件管理")])]),v("li",[v("a",{attrs:{href:"#设备管理"}},[t._v("设备管理")])])])]),v("li",[v("a",{attrs:{href:"#系统调用"}},[t._v("系统调用")])]),v("li",[v("a",{attrs:{href:"#大内核和微内核"}},[t._v("大内核和微内核")]),v("ul",[v("li",[v("a",{attrs:{href:"#大内核"}},[t._v("大内核")])]),v("li",[v("a",{attrs:{href:"#微内核"}},[t._v("微内核")])])])]),v("li",[v("a",{attrs:{href:"#中断分类"}},[t._v("中断分类")]),v("ul",[v("li",[v("a",{attrs:{href:"#外中断"}},[t._v("外中断")])]),v("li",[v("a",{attrs:{href:"#异常"}},[t._v("异常")])]),v("li",[v("a",{attrs:{href:"#陷入"}},[t._v("陷入")])])])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"基本特征"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本特征"}},[t._v("#")]),t._v(" 基本特征")]),t._v(" "),v("h3",{attrs:{id:"并发"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#并发"}},[t._v("#")]),t._v(" 并发")]),t._v(" "),v("p",[t._v("并发是指宏观上在一段时间内能同时运行多个程序，而并行则指同一时刻能运行多个指令。")]),t._v(" "),v("p",[t._v("并行需要硬件支持，如多流水线、多核处理器或者分布式计算机系统。")]),t._v(" "),v("p",[t._v("操作系统通过引入进程和线程，使得程序能够并发运行。")]),t._v(" "),v("h3",{attrs:{id:"共享"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#共享"}},[t._v("#")]),t._v(" 共享")]),t._v(" "),v("p",[t._v("共享是指系统中的资源可以被多个并发进程共同使用。")]),t._v(" "),v("p",[t._v("有两种共享方式：互斥共享和同时共享。")]),t._v(" "),v("p",[t._v("互斥共享的资源称为临界资源，如打印机等，，在同一时刻只允许一个进程访问，需要用同步机制来实现互斥访问。")]),t._v(" "),v("h3",{attrs:{id:"虚拟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚拟"}},[t._v("#")]),t._v(" 虚拟")]),t._v(" "),v("p",[t._v("虚拟技术把一个物理实体转换为多个逻辑实体。")]),t._v(" "),v("p",[t._v("主要有两种虚拟技术：时（时间）分复用技术和空（空间）分复用技术。")]),t._v(" "),v("p",[t._v("多个进程能在同一个处理器算上并发执行使用了时分复用技术，让每个进程轮流占用处理器，每次只执行一小个时间片并快速切换。")]),t._v(" "),v("p",[t._v("虚拟内存使用了空分复用技术，它将物理内存抽象为地址空间，每个进程都有各自的地址空间。地址空间的页被映射到物理内存，地址空间的页并不需要全部在物理内存中，当使用到一个内有在物理内存的页时，执行页面置换算法，将该页置换到内存中。")]),t._v(" "),v("h3",{attrs:{id:"异步"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[t._v("#")]),t._v(" 异步")]),t._v(" "),v("p",[t._v("异步指进程不是一次性执行完毕，而是走走停停，以不可知的速度向前推进。")]),t._v(" "),v("h2",{attrs:{id:"基本功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本功能"}},[t._v("#")]),t._v(" 基本功能")]),t._v(" "),v("h3",{attrs:{id:"进程管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程管理"}},[t._v("#")]),t._v(" 进程管理")]),t._v(" "),v("p",[t._v("进程控制、进程同步、进程通信、死锁处理、处理机调度等。")]),t._v(" "),v("h3",{attrs:{id:"线程管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程管理"}},[t._v("#")]),t._v(" 线程管理")]),t._v(" "),v("p",[t._v("线程控制、线程同步、线程通信、线程调度等。")]),t._v(" "),v("h3",{attrs:{id:"内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),v("p",[t._v("内存分配、地址映射、内存保护与共享、虚拟内存等。")]),t._v(" "),v("h3",{attrs:{id:"文件管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[t._v("#")]),t._v(" 文件管理")]),t._v(" "),v("p",[t._v("文件存储空间的管理、目录管理、文件读写管理和保护等。")]),t._v(" "),v("h3",{attrs:{id:"设备管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设备管理"}},[t._v("#")]),t._v(" 设备管理")]),t._v(" "),v("p",[t._v("完成用户"),v("code",[t._v("I/O")]),t._v("请求，方便用户使用各种设备，并提高设备的利用率。")]),t._v(" "),v("p",[t._v("主要包括缓冲管理、设备分配、设备处理、虚拟设备等。")]),t._v(" "),v("h2",{attrs:{id:"系统调用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统调用"}},[t._v("#")]),t._v(" 系统调用")]),t._v(" "),v("p",[t._v("如果一个进程在用户态需要使用内核态的功能，就进行系统调用从而陷入内核，由操作系统代为完成。")]),t._v(" "),v("p",[v("code",[t._v("Linux")]),t._v("的系统调用主要有以下这些：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Task")]),t._v(" "),v("th",[t._v("Commands")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("进程控制")]),t._v(" "),v("td",[t._v("fork(); exit(); wait();")])]),t._v(" "),v("tr",[v("td",[t._v("进程通信")]),t._v(" "),v("td",[t._v("pipe(); shmget(); mmap();")])]),t._v(" "),v("tr",[v("td",[t._v("文件操作")]),t._v(" "),v("td",[t._v("open(); read(); write();")])]),t._v(" "),v("tr",[v("td",[t._v("设备操作")]),t._v(" "),v("td",[t._v("ioctl(); read(); write();")])]),t._v(" "),v("tr",[v("td",[t._v("信息维护")]),t._v(" "),v("td",[t._v("getpid(); alarm(); sleep();")])]),t._v(" "),v("tr",[v("td",[t._v("安全")]),t._v(" "),v("td",[t._v("chmod(); umask(); chown();")])])])]),t._v(" "),v("h2",{attrs:{id:"大内核和微内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大内核和微内核"}},[t._v("#")]),t._v(" 大内核和微内核")]),t._v(" "),v("h3",{attrs:{id:"大内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大内核"}},[t._v("#")]),t._v(" 大内核")]),t._v(" "),v("p",[t._v("大内核是将操作系统功能作为一个紧密结合的整体放倒内核。")]),t._v(" "),v("p",[t._v("由于各模块共享信息，因此有很高的新能。")]),t._v(" "),v("h3",{attrs:{id:"微内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微内核"}},[t._v("#")]),t._v(" 微内核")]),t._v(" "),v("p",[t._v("由于操作系统不断复杂，因此将一部分操作系统功能移出内核，从而降低内核的复杂性。移出的部分根据分层的原则划分成若干服务，相互独立。")]),t._v(" "),v("p",[t._v("在微内核结构下，操作系统被划分成小的、定义良好的模块，只有微内核这一个模块运行在内核态，其余模块运行在用户态。")]),t._v(" "),v("p",[t._v("因为需要频繁地在用户态和核心态之间切换，所以会有一定的性能损失。")]),t._v(" "),v("h2",{attrs:{id:"中断分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中断分类"}},[t._v("#")]),t._v(" 中断分类")]),t._v(" "),v("h3",{attrs:{id:"外中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#外中断"}},[t._v("#")]),t._v(" 外中断")]),t._v(" "),v("p",[t._v("由"),v("code",[t._v("CPU")]),t._v("执行指令以外的事件引起，如"),v("code",[t._v("I/O")]),t._v("完成中断，表示设备输入/输出处理已经完成，处理器能够发送下一个输入/输出请求。此外还有时钟中断、控制台中断等。")]),t._v(" "),v("h3",{attrs:{id:"异常"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[t._v("#")]),t._v(" 异常")]),t._v(" "),v("p",[t._v("由"),v("code",[t._v("CPU")]),t._v("执行指令的内部事件引起，如非法操作码、地址越界、算术移出等。")]),t._v(" "),v("h3",{attrs:{id:"陷入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#陷入"}},[t._v("#")]),t._v(" 陷入")]),t._v(" "),v("p",[t._v("在用户程序中使用系统调用。")])])}),[],!1,null,null,null);a.default=r.exports}}]);